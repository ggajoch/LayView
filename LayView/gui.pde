/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void btnSelectFile_handler(GButton source, GEvent event) { //_CODE_:btnSelectFile:623748:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  String name = G4P.selectInput("Input Dialog", "txt", "OMF file select");
  println(name);
} //_CODE_:btnSelectFile:623748:

public void btnPlay_handler(GImageButton source, GEvent event) { //_CODE_:btnPlay:784729:
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
  println("play!");
} //_CODE_:btnPlay:784729:

public void btnSelectFolder_handler(GButton source, GEvent event) { //_CODE_:btnSelectFolder:876677:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  String name = G4P.selectFolder("Folder Dialog");
  println(name);
} //_CODE_:btnSelectFolder:876677:

public void GradientList_handler(GDropList source, GEvent event) { //_CODE_:GradientList:503265:
  println("GradientList - GDropList >> GEvent." + event + " @ " + millis());
  gradientList.handler();
} //_CODE_:GradientList:503265:

public void btnColor_handler(GButton source, GEvent event) { //_CODE_:btnColor:954024:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
  gradientList.select_color();
} //_CODE_:btnColor:954024:

public void pointValue_handler(GTextField source, GEvent event) { //_CODE_:pointValue:246761:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
  if( event == GEvent.ENTERED ) {
    String now = source.getText();
    println(now);
    gradientList.set_value(Double.parseDouble(now));
  }
} //_CODE_:pointValue:246761:

public void btnPause_handler(GImageButton source, GEvent event) { //_CODE_:btnPause:276952:
  println("btnPause - GImageButton >> GEvent." + event + " @ " + millis());
  println("pause!");
} //_CODE_:btnPause:276952:

public void Boxes_handler(GOption source, GEvent event) { //_CODE_:Boxes:896145:
  println("Boxes - GOption >> GEvent." + event + " @ " + millis());
  println(source.tagNo);
} //_CODE_:Boxes:896145:

public void Vectors_handler(GOption source, GEvent event) { //_CODE_:Vectors:243175:
  println("Vectors - GOption >> GEvent." + event + " @ " + millis());
  println(source.tagNo);
} //_CODE_:Vectors:243175:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  btnSelectFile = new GButton(this, 10, 10, 80, 30);
  btnSelectFile.setText("Select file");
  btnSelectFile.addEventHandler(this, "btnSelectFile_handler");
  btnPlay = new GImageButton(this, 20, 100, 60, 60, new String[] { "play.png", "play.png", "play.png" } );
  btnPlay.addEventHandler(this, "btnPlay_handler");
  btnSelectFolder = new GButton(this, 10, 50, 80, 30);
  btnSelectFolder.setText("Select folder");
  btnSelectFolder.addEventHandler(this, "btnSelectFolder_handler");
  GradientList = new GDropList(this, 220, 30, 90, 220, 10);
  GradientList.setItems(loadStrings("list_503265"), 0);
  GradientList.addEventHandler(this, "GradientList_handler");
  btnColor = new GButton(this, 220, 60, 80, 30);
  btnColor.setText("Select color");
  btnColor.addEventHandler(this, "btnColor_handler");
  pointValue = new GTextField(this, 320, 30, 100, 20, G4P.SCROLLBARS_NONE);
  pointValue.setText("Enter value");
  pointValue.setOpaque(true);
  pointValue.addEventHandler(this, "pointValue_handler");
  btnPause = new GImageButton(this, 80, 100, 60, 60, new String[] { "pause.png", "pause.png", "pause.png" } );
  btnPause.addEventHandler(this, "btnPause_handler");
  drawMethod = new GToggleGroup();
  Boxes = new GOption(this, 110, 10, 80, 20);
  Boxes.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  Boxes.setText("Boxes");
  Boxes.setOpaque(false);
  Boxes.addEventHandler(this, "Boxes_handler");
  Vectors = new GOption(this, 110, 30, 80, 20);
  Vectors.setTextAlign(GAlign.LEFT, GAlign.MIDDLE);
  Vectors.setText("Vectors");
  Vectors.setOpaque(false);
  Vectors.addEventHandler(this, "Vectors_handler");
  drawMethod.addControl(Boxes);
  Boxes.setSelected(true);
  drawMethod.addControl(Vectors);
  colorPad = new GSketchPad(this, 320, 60, 100, 30);
}

// Variable declarations 
// autogenerated do not edit
GButton btnSelectFile; 
GImageButton btnPlay; 
GButton btnSelectFolder; 
GDropList GradientList; 
GButton btnColor; 
GTextField pointValue; 
GImageButton btnPause; 
GToggleGroup drawMethod; 
GOption Boxes; 
GOption Vectors; 
GSketchPad colorPad; 